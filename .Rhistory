udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Gaiatri Dasu")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
?mtcars
str(mtcars)
dim(mtcars)
row.names
row.names
?row.names
row.names(mtcars)
row.names(mtcars) <- c(1:32)
data(mtcars)
head(mtcars, 10)
head(mtcars)
mtcars$mpg
mtcars$wt
mtcars$vs
mean(mtcars$mpg)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("kernsmooth")
y
install.packages("KernSmooth")
library(KernSmooth)
getwd()
getwd()
install.packages("xlsx", repos="http://cran.stat.auckland.ac.nz")
library(xlsx)
req <- GET("https://api.github.com/rate_limit", gtoken)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
load("C:\\Users\\g\\Desktop\\Coursera\\apiread")
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
req <- GET("https://api.github.com/rate_limit", gtoken)
library(httr)
library(httpuv)
q()
corr <- function(directory, threshold = 0) {
getcorr <- function(files) {}
formattedid <- formatC(id, width=3, flag="0")
filename <- paste(formattedid, "csv", sep = ".")
## alternatively, you can use sprintf function to format instead of the two lines above
filename <- paste(directory, filename, sep = "/")
data <- lapply(filename, read.csv)
df <- ldply(data)
x <- complete.cases(df)
sulfate <- df[,2]
nitrate <- df[,3]
corr <- cor(sulfate,nitrate)
if (j>threshold)
return(corr)
else
return(numeric())
}
a <- list.files(directory)
correlations <- sapply(a, getcorr)
}
corr <- function(directory, threshold = 0) {
getcorr <- function(files) {
formattedid <- formatC(id, width=3, flag="0")
filename <- paste(formattedid, "csv", sep = ".")
## alternatively, you can use sprintf function to format instead of the two lines above
filename <- paste(directory, filename, sep = "/")
data <- lapply(filename, read.csv)
df <- ldply(data)
x <- complete.cases(df)
sulfate <- df[,2]
nitrate <- df[,3]
corr <- cor(sulfate,nitrate)
if (j>threshold)
return(corr)
else
return(numeric())
}
a <- list.files(directory)
correlations <- sapply(a, getcorr)
}
library(plyr)
corr <- function(directory, threshold = 0) {
getcorr <- function(files) {
formattedid <- formatC(id, width=3, flag="0")
filename <- paste(formattedid, "csv", sep = ".")
## alternatively, you can use sprintf function to format instead of the two lines above
filename <- paste(directory, filename, sep = "/")
data <- lapply(filename, read.csv)
df <- ldply(data)
x <- complete.cases(df)
sulfate <- df[,2]
nitrate <- df[,3]
corr <- cor(sulfate,nitrate)
if (j>threshold)
return(corr)
else
return(numeric())
}
a <- list.files(directory)
correlations <- sapply(a, getcorr)
}
corr("specdata")
corr("specdata", threshold = 1000)
corr <- function(directory, threshold = 0) {
getcorr <- function(files) {
formattedid <- formatC(id, width=3, flag="0")
filename <- paste(formattedid, "csv", sep = ".")
## alternatively, you can use sprintf function to format instead of the two lines above
filename <- paste(directory, filename, sep = "/")
data <- lapply(filename, read.csv)
df <- ldply(data)
x <- complete.cases(df)
sulfate <- df[,2]
nitrate <- df[,3]
corr <- cor(sulfate,nitrate)
if (j>threshold)
return(corr)
else
return(numeric())
}
a <- list.files(directory)
sapply(a, getcorr)
}
corr("specdata", threshold = 1000)
corr("specdata")
setwd("C:/Users/g/Desktop/Coursera/")
setwd("C:/Users/g/Desktop/Coursera/ProgrammingAssignment2")
source("cachematrix.R")
makeCacheMatrix(4 10 15 3 4 5 6 7 7)
makeCacheMatrix("4 10 15 3 4 5 6 7 7 6")
x <- makeCacheMatrix("4 10 15 3 4 5 6 7 7 6")
cacheSolve(x)
t <- makeCacheMatrix("4 10 15 3 4 5 6 7 7 6")
cacheSolve(t)
